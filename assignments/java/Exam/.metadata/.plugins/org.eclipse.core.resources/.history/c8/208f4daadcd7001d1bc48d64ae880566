package com.example.exam.controllers;

import java.util.List;

import javax.servlet.http.HttpSession;
import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;

import com.example.exam.models.Person;
import com.example.exam.services.PersonService;
import com.example.exam.services.UserService;

@Controller
public class PersonController {
	
	@Autowired
	private UserService userService;
	
	@Autowired
	private PersonService personService;
	
	@GetMapping("/home")
	public String dashboard(HttpSession session, @ModelAttribute("person") Person person, Model model) {
		if(session.getAttribute("user_id") == null) {
			return "redirect:/";
		} else {
		model.addAttribute("theUser", userService.findUser((Long)session.getAttribute("user_id")));
		
		List<Person> getAll = personService.allPersons();
		model.addAttribute("getAll", getAll);
		return "home.jsp";
		}
	}
	
	@GetMapping("/addPerson")
	public String addIcon(HttpSession session, @ModelAttribute("person") Person person, Model model) {		
		if(session.getAttribute("user_id") == null) {
			return "redirect:/";
		} else {
		return "addPerson.jsp";
		}
	}
	
	@PostMapping("/addPerson")
	public String createIcon(@Valid @ModelAttribute("person") Person person, BindingResult result, Model model) {
		if(result.hasErrors()) {
			return "addPerson.jsp";
		} else {
			personService.createPerson(person);
			return "redirect:/home";
		}
	}
	
	@GetMapping("/view/{id}")
	public String viewPerson(HttpSession session, @PathVariable("id") Long id, @ModelAttribute("person") Person person, Model model) {
		if(session.getAttribute("user_id") == null) {
			return "redirect:/";
		} else {
	
		model.addAttribute("theUser", userService.findUser((Long)session.getAttribute("user_id")));
		model.addAttribute("thePerson", personService.findPerson(id));
		return "view.jsp";
		}
	}
	
	@GetMapping("/edit/{id}")
	public String editPerson(HttpSession session, @PathVariable("id") Long id, @ModelAttribute("person") Person person, Model model) {
		if(session.getAttribute("user_id") == null) {
			return "redirect:/";
		} else {
		model.addAttribute("person", personService.findPerson(id));
		return "edit.jsp";
		}
	}
	@PutMapping("/edit/{id}/update")
	public String updatePerson(@PathVariable("id") Long id, @Valid @ModelAttribute("person") Person person, BindingResult result, Model model) {
		if(result.hasErrors()) {
			model.addAttribute("person", personService.findPerson(id));
			return "editcat.jsp";
		} else {
			personService.updatePerson(person);
			return "redirect:/edit/{id}";
		}
	}
	
	@GetMapping("/delete/{id}")
	public String deletePerson(@PathVariable("id") Long id) {
		personService.deletePerson(id);
		return "redirect:/home";
	}

}
